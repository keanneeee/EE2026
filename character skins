`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 16.10.2024 00:04:02
// Design Name: 
// Module Name: character_select
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module character_select(input basys_clock, btnC, btnU, btnR, btnL, btnD, input [15:0] sw, 
                        output reg [15:0] led, output [7:0] JB);
    wire frame_begin, sending_pixels, sample_pixel;
    wire [12:0] pixel_index;
    wire clk_4,clk_7,clk_8,count_4,count_7,count_8, clk_6p25, clk_25M;
    reg [15:0] oled_data, oled_data_select;
    
    flexible_clock unit6p25Mhz (basys_clock, 7, clk_6p25);
    flexible_clock unit4hz (basys_clock, 12499999, clk_4);
    flexible_clock unit7hz (basys_clock, 7142856, clk_7);
    flexible_clock unit8hz (basys_clock, 6249999, clk_8);
    flexible_clock unit25Mhz (basys_clock, 1, clk_25M);
    
    Oled_Display characters (.clk(clk_6p25), .reset(0), .frame_begin(frame_begin),
    .sending_pixels(sending_pixels), .sample_pixel(sample_pixel), .pixel_index(pixel_index),
    .pixel_data(oled_data), .cs(JB[0]), .sdin(JB[1]), .sclk(JB[3]), .d_cn(JB[4]), .resn(JB[5]),
    .vccen(JB[6]), .pmoden(JB[7]));
    
    wire [6:0] x;
    wire [5:0] y;
    assign x = pixel_index % 96;
    assign y = pixel_index / 96;                    
    wire [13:0] circle_1, circle_2, circle_3, circle_4, circle_5, circle_6, circle_7, circle_8, circle_9, circle_10;
    wire [13:0] circle_1i, circle_2i, circle_3i, circle_4i, circle_5i, circle_6i, circle_7i, circle_8i, circle_9i, circle_10i;
    
    assign circle_6 = (x - 50)*(x - 50) + (y - 43)*(y - 43); // (x^2) + (y^2)  
    assign circle_7 = (x - 70)*(x - 70) + (y - 43)*(y - 43); // (x^2) + (y^2)                       
    assign circle_8 = (x - 90)*(x - 90) + (y - 43)*(y - 43); // (x^2) + (y^2) 
    assign circle_9 = (x - 60)*(x - 60) + (y - 53)*(y - 53); // (x^2) + (y^2)  
    assign circle_10 = (x - 80)*(x - 80) + (y - 53)*(y - 53); // (x^2) + (y^2)
    
    assign circle_1 = (x - 50)*(x - 50) + (y - 10)*(y - 10); // (x^2) + (y^2)  
    assign circle_2 = (x - 70)*(x - 70) + (y - 10)*(y - 10); // (x^2) + (y^2)                       
    assign circle_3 = (x - 90)*(x - 90) + (y - 10)*(y - 10); // (x^2) + (y^2) 
    assign circle_4 = (x - 60)*(x - 60) + (y - 20)*(y - 20); // (x^2) + (y^2)  
    assign circle_5 = (x - 80)*(x - 80) + (y - 20)*(y - 20); // (x^2) + (y^2)
    
    wire [4:0] sw_high = sw[15:11];
    wire [4:0] sw_low = sw[4:0];

    reg [4:0] led_high;
    reg [4:0] led_low;

    
    always @ (posedge clk_25M)
    begin
        led <= 16'b0;

        // Check for one-hot in sw_high (sw[15:11])
        if ((sw_high != 0) && ((sw_high & (sw_high - 1)) == 0))
            led_high = sw_high;
        else
            led_high = 5'b00000; // Turn off all LEDs if more than one switch is on

        // Check for one-hot in sw_low (sw[4:0])
        if ((sw_low != 0) && ((sw_low & (sw_low - 1)) == 0))
            led_low = sw_low;
        else
            led_low = 5'b00000; // Turn off all LEDs if more than one switch is on

        // Assign to LEDs
        led[15:11] <= led_high;
        led[4:0] <= led_low;

        // Ensure other LEDs are off
        led[10:5] <= 6'b000000;

    
        if (circle_1 < 25)
            oled_data <= 16'b11111_000000_00000; //red
        else if (circle_2 < 25)
            oled_data <= 16'b11111_111111_00000; //yellow
        else if (circle_3 < 25)
            oled_data <= 16'b10110_101001_11010; //purple
        else if (circle_4 < 25)
            oled_data <= 16'b00000_000000_11111; //blue 
        else if (circle_5 < 25)
            oled_data <= 16'b11111_101001_00000; //orange
        else if (circle_6 < 25)
            oled_data <= 16'b11111_000000_01011; //pink
        else if (circle_7 < 25)
            oled_data <= 16'b10000_100000_10000; //grey
        else if (circle_8 < 25)
            oled_data <= 16'b01110_010001_00000; //white
        else if (circle_9 < 25)
            oled_data <= 16'b10011_110000_11101; //light blue
        else if (circle_10 < 25)
            oled_data <= 16'b01110_000110_01000; //magenta

        else if (sw[0] == 1'b1 && (circle_6 >= 25 && circle_6 <= 29) && (led_low == sw_low)) // if switch is on, then can choose player
            oled_data <= 16'b11111_111111_11111; //white
        else if (sw[1] == 1'b1 && (circle_7 >= 25 && circle_7 <= 29) && (led_low == sw_low)) // if switch is on, then can choose player
            oled_data <= 16'b11111_111111_11111; //white
        else if (sw[2] == 1'b1 && (circle_8 >= 25 && circle_8 <= 29) && (led_low == sw_low)) // if switch is on, then can choose player
            oled_data <= 16'b11111_111111_11111; //white 
        else if (sw[3] == 1'b1 && (circle_9 >= 25 && circle_9 <= 29) && (led_low == sw_low)) // if switch is on, then can choose player
            oled_data <= 16'b11111_111111_11111; //white    
        else if (sw[4] == 1'b1 && (circle_10 >= 25 && circle_10 <= 29) && (led_low == sw_low)) // if switch is on, then can choose player
            oled_data <= 16'b11111_111111_11111; //white              
                
        else if (sw[11] == 1'b1 && (circle_1 >= 25 && circle_1 <= 29) && (led_high == sw_high)) // if switch is on, then can choose player
            oled_data <= 16'b11111_111111_11111; //white
        else if (sw[12] == 1'b1 && (circle_2 >= 25 && circle_2 <= 29) && (led_high == sw_high)) // if switch is on, then can choose player
            oled_data <= 16'b11111_111111_11111; //white
        else if (sw[13] == 1'b1 && (circle_3 >= 25 && circle_3 <= 29) && (led_high == sw_high)) // if switch is on, then can choose player
            oled_data <= 16'b11111_111111_11111; //white 
        else if (sw[14] == 1'b1 && (circle_4 >= 25 && circle_4 <= 29) && (led_high == sw_high)) // if switch is on, then can choose player
            oled_data <= 16'b11111_111111_11111; //white    
        else if (sw[15] == 1'b1 && (circle_5 >= 25 && circle_5 <= 29) && (led_high == sw_high)) // if switch is on, then can choose player
            oled_data <= 16'b11111_111111_11111; //white   
          
        else if (x == 2 && y >= 6 && y <= 13) // t left
            oled_data <= 16'b11111_111111_11111;
        else if (x >= 2 && x <= 16 && y == 9) // t middle
            oled_data <= 16'b11111_111111_11111;        
          
        else if (x == 2 && y >= 15 && y <= 22) // line C left
            oled_data <= 16'b11111_111111_11111; //white                     
        else if (x == 16 && y >= 15 && y <= 22) // line C right
            oled_data <= 16'b11111_111111_11111; //white                 
        else if (x >= 2 && x <= 16 && y == 22) // line C bottom
            oled_data <= 16'b11111_111111_11111; //white                       

        else if (x == 2 && y >= 24 && y <= 31) // line E left
            oled_data <= 16'b11111_111111_11111; //white                 
        else if (x == 8 && y >= 24 && y <= 31) // line E middle
            oled_data <= 16'b11111_111111_11111; //white     
        else if (x == 16 && y >= 24 && y <= 31) // line E last
            oled_data <= 16'b11111_111111_11111; //white   
        else if (x >= 2 && x <= 16 && y == 31) // line E bottom
            oled_data <= 16'b11111_111111_11111; //white       
  
        else if (x == 16 && y >= 33 && y <= 40) // line L last
            oled_data <= 16'b11111_111111_11111; //white   
        else if (x >= 2 && x <= 16 && y == 40) // line L bottom
            oled_data <= 16'b11111_111111_11111; //white  
  
        else if (x == 2 && y >= 42 && y <= 49) // line E left
            oled_data <= 16'b11111_111111_11111; //white                 
        else if (x == 8 && y >= 42 && y <= 49) // line E middle
            oled_data <= 16'b11111_111111_11111; //white     
        else if (x == 16 && y >= 42 && y <= 49) // line E last
            oled_data <= 16'b11111_111111_11111; //white   
        else if (x >= 2 && x <= 16 && y == 49) // line E bottom
            oled_data <= 16'b11111_111111_11111; //white         
  
        else if (x == 2 && y >= 51 && y <= 58) // line S left
            oled_data <= 16'b11111_111111_11111; //white                 
        else if (x == 8 && y >= 51 && y <= 58) // line S middle
            oled_data <= 16'b11111_111111_11111; //white     
        else if (x == 16 && y >= 51 && y <= 58) // line S last
            oled_data <= 16'b11111_111111_11111; //white    
        else if (x >= 2 && x <= 8 && y == 58) // line S bottom
            oled_data <= 16'b11111_111111_11111; //white        
        else if (x >= 8 && x <= 16 && y == 51) // line S top
            oled_data <= 16'b11111_111111_11111; //white        
  
              
        else if (x == 20 && y >= 6 && y <= 24) // line P left
            oled_data <= 16'b11111_111111_11111; //white                     
        else if (x >= 20 && x <= 29 && y == 6) // line P top
            oled_data <= 16'b11111_111111_11111; //white                 
        else if (x >= 20 && x <= 29 && y == 14) // line P middle
            oled_data <= 16'b11111_111111_11111; //white              
        else if (x == 29 && y >= 6 && y <= 14) // line P right
            oled_data <= 16'b11111_111111_11111; //white   
        else if (x == 35 && y >= 6 && y <= 24) // 1         
            oled_data <= 16'b11111_111111_11111; //white  
            
        else if (x == 20 && y >= 40 && y <= 58) // line P left
            oled_data <= 16'b11111_111111_11111; //white                     
        else if (x >= 20 && x <= 29 && y == 40) // line P top
            oled_data <= 16'b11111_111111_11111; //white                 
        else if (x >= 20 && x <= 29 && y == 48) // line P middle
            oled_data <= 16'b11111_111111_11111; //white              
        else if (x == 29 && y >= 40 && y <= 48) // line P right
            oled_data <= 16'b11111_111111_11111; //white   
        else if (x >= 31 && x <= 40 && y == 40) // 2 top         
            oled_data <= 16'b11111_111111_11111; //white             
        else if (x >= 31 && x <= 40 && y == 48) // 2 middle         
            oled_data <= 16'b11111_111111_11111; //white              
        else if (x >= 31 && x <= 40 && y == 58) // 2 bottom         
            oled_data <= 16'b11111_111111_11111; //white 
        else if (x == 31 && y >= 48 && y <= 58) // 2 left             
            oled_data <= 16'b11111_111111_11111; //white  
        else if (x == 40 && y >= 40 && y <= 48) // 2 right             
                oled_data <= 16'b11111_111111_11111; //white             
                      
                                                                                          
        else        
            oled_data <= 16'b00000_000000_00000; //black background
    end
    
endmodule
